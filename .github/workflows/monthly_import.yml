name: monthly_import

on:
  schedule:
    - cron: '* * 1 * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import sys; print('Python version:',sys.version)"

    - name: Get current date
      id: date
      run: echo "action_state=date::$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT
      run: echo "BRANCH_NAME=import-$action_state" >> $GITHUB_ENV

    - name: Test with environment variables
      run: echo "$BRANCH_NAME"

    - name: Cleanup branches if needed
      id: cleanup-branches
      continue-on-error: true
      run: |
        git branch -D ${{ env.BRANCH_NAME }}

    - name: Setup branch
      if: steps.cleanup-branches.outcome == 'failure'
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git checkout -b ${{ env.BRANCH_NAME }}

    - name: Run python scripts
      continue-on-error: true
      run: |
#        python ./import_arxiv_2021.py && git diff
        git add -A && git commit -m "Imported arXiv" --allow-empty
        python ./import_repository.py && git diff
        git add -A && git commit -m "Imported repository" --allow-empty
#        python ./import_pure_2021.py && git diff
        git add -A && git commit -m "Imported PURE" --allow-empty

    - name: Push changes
      run: |
        git push https://$USERNAME:$REPO_KEY@github.com/tudelft/publications.git ${{ env.BRANCH_NAME }}
      env:
        REPO_KEY: ${{secrets.PUSH_TOKEN}}
        USERNAME: github-actions[bot]

    - name: Make PR
      uses: devops-infra/action-pull-request@v0.5.5
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        source_branch: ${{ env.BRANCH_NAME }}
        target_branch: master
        title: Monthly Paper Update${{ env.BRANCH_NAME }}
        body: "**Automated pull request**"
        old_string: "<!-- Monthly Paper Update ${{ env.BRANCH_NAME }} -->"
        new_string: "** Monthly Paper Update ${{ env.BRANCH_NAME }} **"
        get_diff: true
